<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"
       default-init-method="init">


  <!-- AppEngine Services to be created via the factory bean -->
  <bean id="userService"
        class="com.google.appengine.api.users.UserServiceFactory"
        factory-method="getUserService"/>

  <bean id="mailService"
        class="com.google.appengine.api.mail.MailServiceFactory"
        factory-method="getMailService"/>

  <bean id="mailMessage"
        class="com.google.appengine.api.mail.MailService$Message">
    <property name="subject">
      <value>Google App Engine: AutoShoppe</value>
    </property>
    <property name="textBody">
      <value>Thanks for trying the Autoshoppe sample. This is where a 'real'
        application would send owner contact and payment options
      </value>
    </property>
    <property name="sender">
      <value>anirudhd@google.com</value>
    </property>
  </bean>
  <!-- Configure JDO for appengine using Spring ORM -->

  <bean id="pmf"
        class="org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean">
    <property name="jdoProperties">
      <props>
        <prop key="javax.jdo.PersistenceManagerFactoryClass">
          org.datanucleus.store.appengine.jdo.DatastoreJDOPersistenceManagerFactory
        </prop>
        <prop key="javax.jdo.option.ConnectionURL">
          appengine
        </prop>
        <prop key="javax.jdo.option.NontransactionalRead">
          true
        </prop>
        <prop key="javax.jdo.option.NontransactionalWrite">
          true
        </prop>
        <prop key="javax.jdo.option.RetainValues">
          true
        </prop>
        <prop key="datanucleus.appengine.autoCreateDatastoreTxns">
          true
        </prop>
      </props>
    </property>

  </bean>

  <bean id="datastoreService"
        class="com.google.appengine.api.datastore.DatastoreServiceFactory"
        factory-method="getDatastoreService"/>

  <!-- the application context definition for the autoshoppe DispatcherServlet -->
  <bean id="autoController" name="/business/*.do"
        class="com.google.appengine.demos.autoshoppe.AutoController">
    <property name="autoShoppeService" ref="autoShoppeService"/>
    <property name="gson" ref="gson"/>
    <property name="userService" ref="userService"/>
  </bean>

  <bean id="autoShoppeService"
        class="com.google.appengine.demos.autoshoppe.AutoShoppeService">
    <property name="vehicleDao" ref="vehicleDao"/>
    <property name="mailMessage" ref="mailMessage"/>
    <property name="mailService" ref="mailService"/>

  </bean>

  <bean id="vehicleDao"
        class="com.google.appengine.demos.autoshoppe.VehicleJdoDao">
    <property name="persistenceManagerFactory" ref="pmf"/>
  </bean>

  <bean id="xmlViewResolver"
        class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
    <property name="order" value="1"/>
  </bean>

  <bean id="gson" class="com.google.gson.Gson"/>

  <bean id="memberAccessAdvisor"
        class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
    <property name="advice">
      <ref local="auditInterceptor"/>
    </property>
    <property name="pattern">
      <value>.*</value>
    </property>
  </bean>

  <!-- A Proxybean wrapping up the controller class for interception and advice-->
  <bean id="beanNameAutoProxyCreator"
        class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
    <property name="beanNames">
      <list>
        <idref local="autoController"/>
      </list>
    </property>
    <property name="interceptorNames">
      <list>
        <value>memberAccessAdvisor</value>
      </list>
    </property>
  </bean>

  <bean id="auditInterceptor"
        class="com.google.appengine.demos.autoshoppe.AuditInterceptor"></bean>

</beans>
